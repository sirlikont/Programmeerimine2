// <auto-generated />
using System;
using KooliProjekt.Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KooliProjekt.Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251101114306_AddDataAnnotationsAndConstraints")]
    partial class AddDataAnnotationsAndConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KooliProjekt.Application.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Books"
                        });
                });

            modelBuilder.Entity("KooliProjekt.Application.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Paid");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KooliProjekt.Application.Data.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceAtOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("KooliProjekt.Application.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId", "Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Latest model",
                            Name = "Smartphone",
                            Price = 699m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Powerful gaming laptop",
                            Name = "Laptop",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Noise-cancelling",
                            Name = "Headphones",
                            Price = 199m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Cotton T-shirt",
                            Name = "T-Shirt",
                            Price = 25m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Blue denim",
                            Name = "Jeans",
                            Price = 60m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Winter jacket",
                            Name = "Jacket",
                            Price = 120m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Best-selling novel",
                            Name = "Novel",
                            Price = 15m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Educational book",
                            Name = "Science Book",
                            Price = 30m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "College notebook",
                            Name = "Notebook",
                            Price = 5m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Description = "Portable device",
                            Name = "Tablet",
                            Price = 350m
                        });
                });

            modelBuilder.Entity("KooliProjekt.Application.Data.OrderItem", b =>
                {
                    b.HasOne("KooliProjekt.Application.Data.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KooliProjekt.Application.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KooliProjekt.Application.Data.Product", b =>
                {
                    b.HasOne("KooliProjekt.Application.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("KooliProjekt.Application.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KooliProjekt.Application.Data.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
